#!/usr/bin/env python
'''
$Id: tzfile.py,v 1.1 2003/04/23 01:25:54 zenzen Exp $
'''

__rcs_id__  = '$Id: tzfile.py,v 1.1 2003/04/23 01:25:54 zenzen Exp $'
__version__ = '$Revision: 1.1 $'[11:-2]

from struct import unpack,calcsize

class TZFile:
    ''' Wrapper around a tzfile(5) format file as generated by zic(1) '''
    def __init__(self,filename):
        inf = open(filename)

        # See elsie.nci.nih.gov/src/tzfile.5 for details of the file format
        
        head_fmt = '>4s16x6l'
        head_size = calcsize(head_fmt)

        (magic,ttisgmtcnt,ttisstdcnt,leapcnt,timecnt,typecnt,charcnt) = \
            unpack(head_fmt,inf.read(head_size))

        # Make sure it is a tzinfo(5) file
        assert magic == 'TZif'

        # Our transition times
        transitions_fmt = '>%dl' % (timecnt)
        transitions_size = calcsize(transitions_fmt)
        transitions = unpack(transitions_fmt,inf.read(transitions_size))

        # Our indexes into the local time structures
        lindexes = unpack('%dB' % (timecnt),inf.read(timecnt))

        # Our ttinfo structures, detailing gmtoffset, isdst and abbriv index
        ttinfo_fmt = '>lBB'
        ttinfo_size = calcsize(ttinfo_fmt)
        ttinfo = [ 
            unpack(ttinfo_fmt,inf.read(ttinfo_size)) for i in xrange(0,typecnt)
            ]

        # Our timezone abbreviations, stored suckily as null terminated strings
        raw = inf.read()
        tznames = raw.split('\0',charcnt)[:-1]

        print '%d Transitions' % len(transitions)
        print '%d lindexes' % len(lindexes)
        print '%d ttinfo: %s' % (len(ttinfo),repr(ttinfo))
        print '%d tznames: %s' % (len(tznames),repr(tznames))

        self.transitions = [ ( 
            transitions[i],           # epoch time of transition
            ttinfo[lindexes[i]][0], # utc offset in seconds
            ttinfo[lindexes[i]][1], # is DST
            tznames[ttinfo[lindexes[i]][2]] # timezone abbreviation
            ) for i in xrange(0,len(transitions)) ]

    def __repr__(self):
        return repr(self.transitions)

if __name__ == '__main__':
    import os.path
    base = os.path.join('elsie.nci.nih.gov','build','etc','zoneinfo')
    tz = TZFile(os.path.join(base,'Australia','Melbourne'))
    tz = TZFile(os.path.join(base,'US','Central'))
    tz = TZFile(os.path.join(base,'US','Eastern'))
    print repr(tz)

